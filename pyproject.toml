[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nanosim"
version = "0.1.0"
description = "Multi-scale nanomedicine simulation platform"
authors = [
    {name = "Xiaojun Yang", email = "support@seenano.nl"}
]
readme = "README.md"
license = {text = "AGPL-3.0"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["nanomedicine", "simulation", "drug-delivery", "multi-scale", "computational-chemistry"]

dependencies = [
    "numpy>=1.24.0",
    "pyyaml>=6.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "black==23.12.1",
    "ruff==0.1.9",
    "mypy==1.8.0",
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pre-commit==3.6.0",
]

[project.urls]
Homepage = "https://nanosim.seenano.nl"
Repository = "https://github.com/xiaojunyang0805/NanoSim"
Documentation = "https://github.com/xiaojunyang0805/NanoSim/blob/main/README.md"
"Bug Tracker" = "https://github.com/xiaojunyang0805/NanoSim/issues"

[project.scripts]
nanosim = "nanosim.cli:cli"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term",
    "--cov-report=xml",
    "-v",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
